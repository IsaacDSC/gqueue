services:
  server:
    build:
      context: ../../.
      target: final
    ports:
      - 8080:8080
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - DB_DRIVER=pg
      - DB_CONNECTION_STRING=postgres://idsc:admin@postgres:5432/gqueue?sslmode=disable
      - CACHE_ADDR=redis:6379
      - WQ_CONCURRENCY=32
      - WQ_QUEUES={"internal.critical":7,"internal.high":5,"internal.medium":3,"internal.low":1,"external.critical":7,"external.high":5,"external.medium":3,"external.low":1}
    networks:
      - app-network
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M

  redis:
    image: redis:latest
    ports:
      - 6379:6379
    volumes:
      - redis-data:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.2'
          memory: 256M

  postgres:
    image: postgres:15
    ports:
      - 5432:5432
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ../tables.sql:/docker-entrypoint-initdb.d/01-tables.sql:ro
    environment:
      - POSTGRES_DB=gqueue
      - POSTGRES_USER=idsc
      - POSTGRES_PASSWORD=admin
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U idsc -d gqueue" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M

  pgadmin:
    image: dpage/pgadmin4:latest
    ports:
      - 8081:80
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@admin.com
      - PGADMIN_DEFAULT_PASSWORD=admin
      - PGADMIN_CONFIG_SERVER_MODE=False
      - PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED=False
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - app-network
    restart: always
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.2'
          memory: 256M

networks:
  app-network:
    driver: bridge

volumes:
  redis-data:
  postgres-data:
  pgadmin-data:
